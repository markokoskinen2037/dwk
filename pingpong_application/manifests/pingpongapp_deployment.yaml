apiVersion: v1
kind: Service
metadata:
  name: pingpong-svc
  namespace: project
spec:
  type: NodePort
  selector:
    app: pingpongapp
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pingpongapp-dep
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pingpongapp
  template:
    metadata:
      labels:
        app: pingpongapp
    spec:
      containers:
        - name: pingpongapp
          image: markokoskinen2019/dwk-second_app:v22
          resources:
            limits:
              cpu: "500m"
              memory: "100Mi"
          env:
            - name: PGPASSWORD 
              valueFrom:
                secretKeyRef:
                  name: gcpsql-postgres-config
                  key: PGPASSWORD
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: gcpsql-postgres-config
                  key: PGHOST
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: gcpsql-postgres-config
                  key: PGUSER
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          resources:
            limits:
              cpu: "500m"
              memory: "100Mi"
          command:
            - "/cloud_sql_proxy"
            - "-instances=dwk-gke-310715:europe-north1:project-db=tcp:5432"
            - "-credential_file=/secrets/service_account.json"
          securityContext:
             runAsNonRoot: true
          volumeMounts:
          - name: secret-volume
            mountPath: /secrets/
            readOnly: true
      volumes:
        - name: secret-volume
          secret:
            secretName: sa-secret